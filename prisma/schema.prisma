// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator prismaClassGenerator {
    provider               = "prisma-class-generator"
    dryRun                 = false
    separateRelationFields = true
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id           Int        @id @default(autoincrement())
    email        String     @unique
    password     String
    role         String
    establishment   Establishment @relation(fields: [establishmentId], references: [id])
    establishmentId Int
}

model Establishment {
    id      Int     @id @default(autoincrement())
    name    String
    address String
    phone   String
    menus   Menu[]
    users   User[]
    Order   Order[]
    qr      String?
}

model Menu {
    id           Int        @id @default(autoincrement())
    name         String
    establishment   Establishment @relation(fields: [establishmentId], references: [id], onDelete: Cascade)
    description  String?
    photo        String?
    categories   Category[]
    establishmentId Int
    status       Boolean    @default(true)
}

model Category {
    id     Int     @id @default(autoincrement())
    name   String
    menu   Menu    @relation(fields: [menuId], references: [id], onDelete: Cascade)
    photo  String?
    items  Item[]
    menuId Int
}

model Item {
    id          Int         @id @default(autoincrement())
    category    Category    @relation(fields: [categoryId], references: [id])
    name        String
    description String?
    price       Float
    photo       String?
    categoryId  Int
    OrderItem   OrderItem[]
}

model Order {
    id           Int         @id @default(autoincrement())
    establishment   Establishment  @relation(fields: [establishmentId], references: [id])
    created_at   DateTime    @default(now())
    status       String
    order_items  OrderItem[]
    establishmentId Int
    message      String
}

model OrderItem {
    id       Int   @id @default(autoincrement())
    order    Order @relation(fields: [orderId], references: [id])
    item     Item  @relation(fields: [itemId], references: [id])
    quantity Int
    price    Float
    orderId  Int
    itemId   Int
}

